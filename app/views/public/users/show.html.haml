.container-fluid
  .row.text-center(style="height: 15vh;")
    // マイページ上部
    .col.col-2.border.bg-secondary
      LOGO
    .col.border.bg-secondary
      ルーム名
    .col.col-2.border.bg-secondary
      = "#{current_user.name} ログイン中"
      .btn.btn-sm.btn-success.my-1{"data-target" => "#modalUserEdit", "data-toggle" => "modal", type: "button" }
        ユーザーの編集
        
      #modalUserEdit.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalUserEditTitle", role: "dialog", tabindex: "-1"}
        .modal-dialog{role: "document"}
          .modal-content
            .modal-header
              %h5#modalUserEditTitle.modal-title ユーザー情報編集<i class="fas fa-plus"></i>
              %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
                %span{"aria-hidden" => "true"} ×
            .modal-body.text-left(style="word-wrap: break-word;")
              // モーダルの中身
              = form_with model: current_user, url: users_path, method: :patch do |f|
                .field.mt-3
                  = f.label :name, "名前", class: "pl-2"
                  = f.text_field :name, class: "form-control", id: "validationTextarea", placeholder: "お名前", required: true
                  .invalid-feedback お名前を入力してください。
                .field.mt-3
                  = f.label :nickname, "ニックネーム", class: "pl-2"
                  = f.text_field :nickname, class: "form-control", id: "validationTextarea", placeholder: "ニックネーム", required: true
                  .invalid-feedback ニックネームを入力してください。
                .field.mt-3
                  = f.label :phone_number, "電話番号", class: "pl-2"
                  = f.number_field :phone_number, class: "form-control", id: "validationTextarea", placeholder: "電話番号", required: true
                  .invalid-feedback 電話番号を入力してください。
                .field.mt-3
                  = f.label :email, "メールアドレス", class: "pl-2"
                  = f.email_field :email, autofocus: true, class: "form-control", id: "validationTextarea", placeholder: "メールアドレス", required: true
                  .invalid-feedback メールアドレスを入力してください。
                .field.mt-3
                  = f.label :search_id, "検索用ID", class: "pl-2"
                  = f.text_field :search_id, class: "form-control", placeholder: "検索用ID"
                .mt-3
                  = f.submit "更新", class: "btn btn-success"
                    
      = link_to 'ログアウト', destroy_user_session_path, method: :delete, class: "btn btn-info"

  // ページ下部
  .row(style="height: 85vh;")

    // 左のサイドバー
    .col.col-2.p-0

      // タブ
      %ul.nav.nav-tabs(id="myTab" role="tablist")
        %li.nav-item
          %a.nav-link.active(id="rooms-tab" data-toggle="tab" href="#rooms" role="tab" aria-controls="rooms" aria-selected="true")
            ルーム
        %li.nav-item
          %a.nav-link(id="friends-tab" data-toggle="tab" href="#friends" role="tab" aria-controls="friends" aria-selected="false")
            フレンド

      // タブの内容
      .tab-content(id="myTabContent")

        // ルーム一覧
        .tab-pane.fade.show.active.list-group(id="rooms" role="tabpanel" aria-labelledby="rooms-tab")

          // ルームIDをJavascriptに渡すテスト中
          - if @room.present?
            .test_id2.d-none
              = @room.id

          // ルーム作成ボタン
          .text-center
            .btn.btn-sm.btn-success.my-1{"data-target" => "#modalRoomNew", "data-toggle" => "modal", type: "button" }
              ルームを作成する<i class="fas fa-plus"></i>

          // モーダルでルーム作成フォームを表示する記述
          #modalRoomNew.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalRoomNewTitle", role: "dialog", tabindex: "-1"}
            .modal-dialog{role: "document"}
              .modal-content
                .modal-header
                  %h5#modalRoomNewTitle.modal-title ルーム作成<i class="fas fa-plus"></i>
                  %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
                    %span{"aria-hidden" => "true"} ×
                .modal-body.text-left(style="word-wrap: break-word;")
                  // モーダルの中身
                  = render "public/rooms/room_form", room: Room.new, submit_text: "ルーム作成"
                  
          
                    
                    
          - @rooms.each do |room|
            -# %p{"data-tablinks" => "off"}
            - if room == @room
              = link_to root_path, data: { 'turbolinks': false }, class: "list-group-item d-flex justify-content-between align-items-center active" do
                = room.name
                %span.badge.badge-secondary.badge-pill= room.messages.count
            - else
              = link_to root_path(room_id: room.id), data: { 'turbolinks': false }, class: "list-group-item d-flex justify-content-between align-items-center list-group-item-action" do
                = room.name
                %span.badge.badge-primary.badge-pill= room.messages.count
            - entry = room.entries.find_by(user_id: current_user)
            - if room.entried?(current_user) == false
              = link_to '参加する', entry_path(entry.id), method: :patch

        // フレンド一覧
        .tab-pane.fade.list-group(id="friends" role="tabpanel" aria-labelledby="friends-tab")

          // フレンド検索フォーム
          = form_with url: root_path, method: :get do |f|
            = f.select :range, options_for_select( { '名前' => 'Name', 'ニックネーム' => 'Nickname', 'ID' => 'ID'  }, 'Name')
            = f.search_field :word
            = f.submit "検索", id: "user_list"
          = link_to "リセット", root_path, method: :get

          // ユーザー一覧の部分テンプレート呼び出し
          // #user_lists
          //   = render "user_list", users: @users
          - @users.each do |user|
            = user.name

            - if current_user.following?(user)
              = link_to "フォローを外す", users_relationships_path(params: {user_id: user.id}), method: :delete
            - else
              = link_to "フォローする", users_relationships_path(params: {user_id: user.id}), method: :post

    // メイン画面
    .col
      // ルーム選択時
      - if @room.present?
        %h1
          = @room.name

          // モーダル
          .text-center
            .btn.btn-sm.btn-success.my-1{"data-target" => "#modalRoomEntry", "data-toggle" => "modal", type: "button" }
              ルームへ招待<i class="fas fa-plus"></i>

          //= link_to user.name, entries_path(params: { entry: { user_id: user.id, room_id: @room.id } }), method: :post, class: "list-group-item list-group-item-action"

          // ルーム編集ボタン
          .btn.btn-sm.btn-success.my-1{"data-target" => "#modalRoomEdit", "data-toggle" => "modal", type: "button"}
            ルームを編集する<i class="fas fa-edit"></i>

        // モーダルでルーム作成フォームを表示する記述
        #modalRoomEntry.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalRoomEntryTitle", role: "dialog", tabindex: "-1"}
          .modal-dialog{role: "document"}
            .modal-content
              .modal-header
                %h5#modalRoomEntryTitle.modal-title
                  フレンド招待<i class="fas fa-plus"></i>
                  %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
                    %span{"aria-hidden" => "true"} ×
                .modal-body.text-left(style="word-wrap: break-word;")
                  = form_with model: Entry.new, url: create_all_path, method: :post do |f|
                    - count = 0
                    - @users.each do |user|
                      - unless @room.users.any?{|room_user| room_user == user}
                        = f.hidden_field :room_id, :value => @room.id
                        = check_box_tag "user_ids[]", user.id
                        = user.name
                        - count += 1
                    - if count == 0
                      = "招待を送れるユーザーがいません"
                    - else
                      = submit_tag "送信"

        // モーダルでルーム編集フォームを表示する記述
        #modalRoomEdit.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalRoomEditTitle", role: "dialog", tabindex: "-1"}
          .modal-dialog{role: "document"}
            .modal-content
              .modal-header
                %h5#modalRoomEditTitle.modal-title ルーム編集<i class="fas fa-edit"></i>
                %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
                  %span{"aria-hidden" => "true"} ×
              .modal-body.text-left(style="word-wrap: break-word;")
                // モーダルの中身
                = render "public/rooms/room_form", room: @room, submit_text: "変更を保存"

        // チャット画面
        .container
          // N+1問題対策のため@messagesにはユーザーデータも含めてあります
          - @messages.each do |message|
            .row
              - user = message.user
              - if user == current_user
                .col
                .col.text-right
                  %small
                    = user.name
                    = message.created_at.strftime('%Y/%m/%d %H:%M')
                  .bg-info.rounded.m-1.p-1
                    = message.message
              - else
                .col
                  %small
                    = user.name
                    = message.created_at.strftime('%Y/%m/%d %H:%M')
                  .bg-secondary.rounded.m-1.p-1
                    = message.message
                .col

          // 投稿フォーム
          .row
            - if @room.entried?(current_user)
              // ルーム参加時
              = form_with model: Message.new, url: messages_path, method: :post, class: "input-group" do |f|
                = f.text_area :message, class: "form-control", rows: "3"
                = f.hidden_field :room_id, :value => @room.id
                .input-group-append
                  = f.submit "送信", class:"btn btn-outline-secondary"
            - else
              // ルーム未参加時
              .text-center
                参加してメッセージを投稿しましょう

      - else
        %h1 ルーム未選択です


:javascript
  window.onload = () => {
    let rooms = document.getElementById("rooms-tab");
    let friends = document.getElementById("friends-tab");

    let changeActive = 1;
    let myActive = localStorage.getItem("changeActive");

    // ページ読み込み時に発火
    // changeActiveの内容で、タブが切り替わる
    rooms.addEventListener("click", () => {
      changeActive = 1;
      localStorage.setItem("changeActive", changeActive);
      rooms.click();
    });

    friends.addEventListener("click", () => {
      changeActive = 2;
      localStorage.setItem("changeActive", changeActive);
      friends.click();
    });

    if (myActive == 1) {
      rooms.click();
    } else if (myActive == 2){
      friends.click();
    } else {

    };

    // ルームIDを取得
    let roomId = document.getElementsByClassName("test_id2")[0].innerHTML;
    console.log(roomId);
  };
