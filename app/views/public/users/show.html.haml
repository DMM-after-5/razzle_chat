.container-fluid
  .row.text-center(style="height: 15vh;")
    // マイページ上部
    .col.col-2.border.bg-secondary
      LOGO
    .col.border.bg-secondary
      ルーム名
    .col.col-2.border.bg-secondary
      // ルーム作成ボタン
      // 仮のルーム作成ボタンです
      = form_with model: Room.new, url: rooms_path do |f|
        = f.hidden_field :name, :value => "name"
        = f.submit 'ルーム作成(仮)', class: "btn btn-info"

      // userボタン

      // configボタン

      // ログアウトボタン
      - if user_signed_in?
        = link_to 'ログアウト', destroy_user_session_path, method: :delete, class: "btn btn-info"
  .row.bg-secondary(style="height: 85vh;")
    // マイページ下部
    .col.col-2
      %ul.nav.nav-tabs(id="myTab" role="tablist")
        %li.nav-item
          %a.nav-link.active(id="rooms-tab" data-toggle="tab" href="#rooms" role="tab" aria-controls="rooms" aria-selected="true")
            ルーム
        %li.nav-item
          %a.nav-link(id="friends-tab" data-toggle="tab" href="#friends" role="tab" aria-controls="friends" aria-selected="false")
            フレンド(仮)
      .tab-content(id="myTabContent")
        // 左のサイドバー
        .tab-pane.fade.show.active(id="rooms" role="tabpanel" aria-labelledby="rooms-tab")
          // ルーム一覧
          - @rooms.each do |room|
            = room.name
            - entry = room.entries.find_by(user_id: current_user)
            - if entry.entry_status == false
              = link_to '参加する', entry_path(entry.id), method: :patch
            %br
        .tab-pane.fade.list-group(id="friends" role="tabpanel" aria-labelledby="friends-tab")
          // フレンド一覧
          // 下記暫定的な書き方
          - @users.each do |user|
            = link_to user.name, entries_path(params: { entry: { user_id: user.id, room_id: 1 } }), method: :post, class: "list-group-item list-group-item-action"
            - if current_user.following?(user)
              = link_to "フォローを外す", users_relationships_path(params: {user_id: user.id}), method: :delete
            - else
              = link_to "フォローする", users_relationships_path(params: {user_id: user.id}), method: :post

    .col.border
      // チャット画面など
      // 下記暫定的な書き方
      チャット画面(仮)
      - room = Room.find(1)
      .container
        .row
          - room.users.each do |user|
            - if user.id == room.owner_id
              .col
                = user.name
                - user.messages.each do |message|
                  = message.message
            - else
              .col
                = user.name
                - user.messages.each do |message|
                  = message.message
        .row
          = form_with model: Message.new, url: messages_path, method: :post do |f|
            = f.text_area :message
            = f.hidden_field :room_id, :value => 1
            = f.submit "送信"

