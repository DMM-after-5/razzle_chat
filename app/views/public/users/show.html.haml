.container-fluid
  .test(style="position: absolute; height: 100vh; text-align: center; width: 100vw;")
    #modal.d-none
      // ルーム作成ボタン
      // 仮のルーム作成ボタンです

  .row.text-center(style="height: 15vh;")
    // マイページ上部
    .col.col-2.border.bg-secondary
      LOGO
    .col.border.bg-secondary
      ルーム名
    .col.col-2.border.bg-secondary

      // userボタン

      // ルーム作成ボタン
      %button.btn.btn-primary{"data-target" => "#exampleModalLong", "data-toggle" => "modal", type: "button" }
        ルーム作成

      // ルーム編集ボタン
      - if @room.present?
        %button.btn.btn-primary{"data-target" => "#exampleModalLong", "data-toggle" => "modal", type: "button"}
          ルーム編集

      // モーダルで表示する記述です
      #exampleModalLong.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "exampleModalLongTitle", role: "dialog", tabindex: "-1"}
        .modal-dialog{role: "document"}
          .modal-content
            .modal-header
              %h5#exampleModalLongTitle.modal-title ルーム作成
              %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
                %span{"aria-hidden" => "true"} ×
            .modal-body.text-left(style="word-wrap: break-word;")
              // モーダルの中身
              = render "public/rooms/room_form", room: Room.new

      // configボタン

      // ログアウトボタン
      - if user_signed_in?
        = link_to 'ログアウト', destroy_user_session_path, method: :delete, class: "btn btn-info"
  .row.bg-secondary(style="height: 85vh;")
    // マイページ下部
    .col.col-2
      %ul.nav.nav-tabs(id="myTab" role="tablist")
        %li.nav-item
          %a.nav-link.active(id="rooms-tab" data-toggle="tab" href="#rooms" role="tab" aria-controls="rooms" aria-selected="true")
            ルーム
        %li.nav-item
          %a.nav-link(id="friends-tab" data-toggle="tab" href="#friends" role="tab" aria-controls="friends" aria-selected="false")
            フレンド(仮)
      .tab-content(id="myTabContent")
        // 左のサイドバー
        .tab-pane.fade.show.active(id="rooms" role="tabpanel" aria-labelledby="rooms-tab")
          // ルーム一覧


          // ルームIDをJavascriptに渡すテスト中
          - if @room.present?
            .test_id2.d-none
              = @room.id


          - @rooms.each do |room|
            %p{"data-tablinks" => "off"}
              = link_to room.name, root_path(room_id: room.id), data: { 'turbolinks': false }
            - entry = room.entries.find_by(user_id: current_user)
            - if entry.entry_status == false
              = link_to '参加する', entry_path(entry.id), method: :patch
            %br
        .tab-pane.fade.list-group(id="friends" role="tabpanel" aria-labelledby="friends-tab")
          // フレンド一覧
          = form_with url: root_path, method: :get do |f|
            = f.select :range, options_for_select( { '名前' => 'Name', 'ニックネーム' => 'Nickname', 'ID' => 'ID'  }, 'Name')
            = f.search_field :word
            = f.submit "検索", id: "user_list"
          = link_to "リセット", root_path, method: :get
          // ユーザー一覧の部分テンプレート呼び出し
          // #user_lists
          //   = render "user_list", users: @users
          - @users.each do |user|
            = link_to user.name, entries_path(params: { entry: { user_id: user.id, room_id: 1 } }), method: :post, class: "list-group-item list-group-item-action"
            - if current_user.following?(user)
              = link_to "フォローを外す", users_relationships_path(params: {user_id: user.id}), method: :delete
            - else
              = link_to "フォローする", users_relationships_path(params: {user_id: user.id}), method: :post

    .col.border
      // チャット画面など
      // 下記暫定的な書き方
      チャット画面(仮)
      // - room = Room.find(1)
      - if @room.present?
        = @room.name
        .container
          .row
            - @room.users.each do |user|
              - if user.id == @room.owner_id
                .col
                  = user.name
                  - user.messages.each do |message|
                    = message.message
              - else
                .col
                  = user.name
                  - user.messages.each do |message|
                    = message.message
          .row
            = form_with model: Message.new, url: messages_path, method: :post do |f|
              = f.text_area :message
              = f.hidden_field :room_id, :value => 1
              = f.submit "送信"


:javascript
  window.onload = () => {
    let rooms = document.getElementById("rooms-tab");
    let friends = document.getElementById("friends-tab");

    let changeActive = 1;
    let myActive = localStorage.getItem("changeActive");

    // ページ読み込み時に発火
    // changeActiveの内容で、タブが切り替わる
    rooms.addEventListener("click", () => {
      changeActive = 1;
      localStorage.setItem("changeActive", changeActive);
      rooms.click();
    });

    friends.addEventListener("click", () => {
      changeActive = 2;
      localStorage.setItem("changeActive", changeActive);
      friends.click();
    });

    if (myActive == 1) {
      rooms.click();
    } else if (myActive == 2){
      friends.click();
    } else {

    };

    // ルームIDを取得
    let roomId = document.getElementsByClassName("test_id2")[0].innerHTML;
    console.log(roomId);
  };

// モーダル用
:javascript
  $(function() {
    $('#exampleModalLong').on('shown.bs.modal', function (e) {
      $('#myInput').focus();
    })
  });
